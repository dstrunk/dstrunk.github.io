{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["__webpack_require__","r","__webpack_exports__","d","graphql","StaticQueryContext","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","createElement","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","SEO","_ref","description","lang","meta","keywords","title","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","isPartiallyActive","isPartiallyCurrent","className","PartialNavLink","react_default","gatsby_browser_entry","Object","assign","getProps","Header","_ref2","siteTitle","to","class","activeClassName","header_PartialNavLink","Layout","Fragment","header","Date","getFullYear","href","_755544856","node","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape"],"mappings":"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","file":"1-918af83357971ce5db5a.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import { Link } from 'gatsby'\nimport PropTypes from 'prop-types'\nimport React from 'react'\n\nconst isPartiallyActive = ({ isPartiallyCurrent }) => {\n  return isPartiallyCurrent\n    ? { className: 'nav__link nav__link--active' }\n    : { className: 'nav__link' }\n}\n\nconst PartialNavLink = props => (\n  <Link getProps={isPartiallyActive} {...props}>\n    {props.children}\n  </Link>\n)\n\nconst Header = ({ siteTitle }) => (\n  <header className=\"mb-8\">\n      <h1 className=\"text-xl mb-4\">\n        <Link to=\"/\" className=\"no-underline text-grey-900\">{siteTitle}</Link>\n      </h1>\n\n      <nav class=\"nav\">\n        <Link to=\"/projects/\"\n          className=\"nav__link\"\n          activeClassName=\"nav__link--active\">Projects</Link>\n        <PartialNavLink to=\"/journal/\"\n          className=\"nav__link\"\n          activeClassName=\"nav__link--active\">Journal</PartialNavLink>\n        <PartialNavLink to=\"/til/\"\n          className=\"nav__link\"\n          activeClassName=\"nav__link--active\">TIL</PartialNavLink>\n        <PartialNavLink to=\"/blog/\"\n          className=\"nav__link\"\n          activeClassName=\"nav__link--active\">Archive</PartialNavLink>\n      </nav>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { StaticQuery, graphql } from 'gatsby'\n\nimport Header from './header'\nimport '../less/style.less'\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header siteTitle={data.site.siteMetadata.title} />\n        \n      <section className=\"mb-8 body w-full md:w-2/3 lg:w-1/2\">\n          {children}\n        </section>\n\n        <footer className=\"text-sm\">\n          <strong>© Daniel Strunk {new Date().getFullYear()}</strong>.{' '}\n          Built using <a className=\"text-grey-600 no-underline\" href=\"//www.gatsbyjs.org\">Gatsby</a>{' '}\n          and <a className=\"text-grey-600 no-underline\" href=\"//tailwindcss.com/docs/what-is-tailwind/\">Tailwind CSS</a>,{' '}\n          and hosted on <a className=\"text-grey-600 no-underline\" href=\"//pages.github.com/\">GitHub Pages</a>.\n        </footer>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}