{"data":{"markdownRemark":{"html":"<p><em>This walkthrough assumes you have a Gmail account. If you are using another\nemail provider that utilizes SMTP, skip to the bottom of this tutorial for a\nlist of files that will need to be updated with your provider’s SMTP\ninformation.</em></p>\n<p>Occasionally you might need to test PHP email functionality from your local\ndevelopment environment; if that’s the case, this is for you.</p>\n<p>First up, I created a shell script that quickly sets up a Vagrant Ubuntu box\nwith Postfix; this script downloads and updates CA Certificates, installs\nPostfix and all required dependencies, updates the Postfix configuration, and\nfinally reloads the service:</p>\n<p>{% gist ff6301609bdbbcb3057d27812f8630e6 %}</p>\n<h2>Let’s get started</h2>\n<p>First thing’s first: let’s create an application password for Gmail. Follow the\nsteps below:</p>\n<ol>\n<li>Visit your <a href=\"https://security.google.com/settings/security/apppasswords\">App passwords</a> page.</li>\n<li>At the bottom, click <strong>Select app</strong> and choose the app you’re using.</li>\n<li>Click <strong>Select device</strong> and choose the device you’re using.</li>\n<li>Select <strong>Generate</strong>.</li>\n<li>Follow the instructions to enter the App password (the 16 character code in\nthe yellow bar) on your device.</li>\n<li>Select <strong>Done</strong>.</li>\n</ol>\n<p>Once you are finished, you won’t see that App password again. However, you will\nsee a list of apps and devices you’ve created App passwords for.</p>\n<p>Now that you’ve got an applciation-specific password, SSH into your VM. From\nyour VM’s directory, run this command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">vagrant <span class=\"token function\">ssh</span></code></pre></div>\n<p>Now that you’re in the VM, edit <code class=\"language-text\">/etc/postfix/sasl_passwd</code> by running following\ncommand:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> vim /etc/postfix/sasl_passwd</code></pre></div>\n<p>The file contains one line: the SMTP information for Gmail, and a placeholder\nfor your gmail address and application-specific password. Input these now\n(formatted as such: <code class=\"language-text\">username@gmail.com:password</code>), then save the file.</p>\n<p>After saving the file, run the below command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token function\">sudo</span> /etc/init.d/postfix reload</code></pre></div>\n<p>Now, you should be good to go! If you’d like to test sending out an email, you\ncan run the below command:</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\"><span class=\"token keyword\">echo</span> <span class=\"token string\">\"it works!\"</span> <span class=\"token operator\">|</span> mail -s <span class=\"token string\">\"Test email from Vagrant\"</span> username@gmail.com</code></pre></div>\n<p>You should receive an email in short order.</p>\n<h2>Alternatives</h2>\n<h3>I don’t use Gmail; what should I do?</h3>\n<p>As long as your email provider has SMTP support, updating your Postfix config is\nrelatively straightforward. Googling for ’[your-email-provider] smtp’ should\nyield their address and port number needed (e.g., a quick Google search for\nYahoo’s information yielded <code class=\"language-text\">smtp.mail.yahoo.com</code> and port 465).</p>\n<p>From there, you will need to edit <code class=\"language-text\">/etc/postfix/main.cf</code> and\n<code class=\"language-text\">/etc/postfix/sasl_passwd</code>. In main.cf you’re looking for the line containing\nrelayhost. You will update this line to have your email client’s SMTP settings\nwithin the square brackets, and the port after the colon (e.g.\n[smtp.mail.yahoo.com]:465).</p>\n<p>In <code class=\"language-text\">/etc/postfix/sasl_passwd</code> you will need to do the same thing.</p>\n<p><strong>Also of note when working with a non-Gmail account:</strong> you might not have the\nability to create application-specific passwords. So, you’ll need to put your\nactual email password inside <code class=\"language-text\">/etc/postfix/sasl_passwd</code>. </p>\n<h3>How about using an external mail provider (Mailgun, Mandrill, etc.)?</h3>\n<p>Go for it! If that’s the case, you don’t need this at all. You will, however,\nneed an understanding of your respective email provider’s API, as well as how to\nintegrate this API into whatever you’re building. Please see their documentation\nfor more details.</p>\n<p>{% include shared/image.html name=“princess-another-castle.jpg” alt=“Your\nprincess is in another castle!” %}</p>","frontmatter":{"title":"Configure Vagrant to test emails","date":null}}},"pageContext":{"slug":"configure-vagrant-to-test-emails","type":"blog","jekyllDate":"2016-10-15"}}