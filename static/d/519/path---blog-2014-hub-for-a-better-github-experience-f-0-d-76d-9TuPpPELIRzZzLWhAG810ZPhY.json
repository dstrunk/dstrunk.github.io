{"data":{"markdownRemark":{"html":"<p>I recently installed <a href=\"https://hub.github.com/\">Hub</a>, a command line wrapper for git that pairs nicely with GitHub. Hub makes it easier to fetch repositories, navigate project pages and fork repos from the command line.</p>\n<p>For Mac, installation is simple; if you have <a href=\"http://brew.sh/\">Brew</a> installed, it’s as easy as typing <code class=\"language-text\">brew install hub</code> in the command line. From there, type <code class=\"language-text\">alias git=hub</code>, then test it out:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git version\n=&gt; git version 1.7.9\n=&gt; hub version 1.11.0</code></pre></div>\n<p>If you see anything like the above, then it works!</p>\n<h2>Playing with Hub</h2>\n<p>Hub makes managing GitHub through the command line a LOT simpler. Take a look at some ways Hub can improve your workflow:</p>\n<ul>\n<li>\n<p>Say you want to clone one of your projects (dotfiles, for instance). Instead of <code class=\"language-text\">git clone git://github.com/YOUR_USER/dotfiles.git</code>, you can simply type <code class=\"language-text\">git clone dotfiles</code>. If you’ve already configured git, Hub already knows who you are, so it smartly fetches your dotfiles repo from the server.</p>\n</li>\n<li>\n<p>If you want to clone somebody else’s project, add the user’s name before the project like this: <code class=\"language-text\">git clone another_user/dotfiles</code>.</p>\n</li>\n<li>\n<p>Say you want to look at all of the current project’s issues… Just type <code class=\"language-text\">git browse -- issues</code> while in a project.</p>\n</li>\n</ul>\n<h2>An example workflow</h2>\n<p>“How will this help me as an open source contributor?” you might ask. Good question! Here’s an example workflow:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">git clone github/hub\ncd hub\n\n# create topic branch\ngit checkout -b ds-feature\n  # making changes...\ngit commit -m &quot;feature complete!&quot;\n\n# fork the repo\ngit fork\n\n# push changes to remote\ngit push YOUR_USER ds-feature\n\n# open pull request from your branch\ngit pull-request</code></pre></div>\n<p>That was easy! There’s a lot more that Hub does, so I’d suggest reading the documentation neatly laid out at <a href=\"https://hub.github.com\">https://hub.github.com</a>. In my opinion, Hub not only saves keystrokes, but makes understanding a typical GitHub workflow a lot easier to wrap your brain around. Try it today!</p>","frontmatter":{"title":"Hub for a better GitHub experience","date":null}}},"pageContext":{"slug":"hub-for-a-better-github-experience","blogpath":"blog/2014/hub-for-a-better-github-experience","type":"blog","jekyllDate":"2014-12-15"}}