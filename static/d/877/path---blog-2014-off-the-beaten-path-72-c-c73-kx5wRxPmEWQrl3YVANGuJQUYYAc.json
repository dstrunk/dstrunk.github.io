{"data":{"markdownRemark":{"html":"<p>They say the best way to learn something new is to jump headfirst; immerse yourself, fail early and fail often. Inspired by <a href=\"http://24ways.org/2013/levelling-up/\">this post on 24 ways</a>, I decided to forego tutorials for the week, opting instead to see what I’ve learned so far. I started two new projects: a type framework (front-end) and a URL shortener in Rails. Learning this way might <em>feel</em> less directed / more frustrating at first, but there’s a certain satisfaction in completing a project with (little to) no outside help. <strong>On the front-end:</strong> Grid frameworks like <a href=\"https://getbootstrap.com\">Bootstrap</a> are fine and all, but I personally find the typography to be a bit generic. To that end, I’ve been working on an internal framework of sorts for easily testing typography for new sites. The project is called <a href=\"https://github.com/dstrunk/typist\">Typist</a>, and it’s free to modify as suites your needs. It’s built using Sass for easy extendability via variables, mixins and the like, and uses GruntJS to compile CSS with a simple <code class=\"language-text\">grunt watch</code> command in terminal. In addition to that, it has best practices for web typography (including rem support with a pixel fallback for <a href=\"http://theie8countdown.com/\">older browsers</a>). You can either use it to build your own type framework with the included Sass files, or just use the <code class=\"language-text\">index.html</code> file, dropping in your stylesheet and see how the page is rendered. I believe having a styleguide of sorts for all new projects will help manage an evolving scope, and this project is the result of that belief. <strong>On Rails:</strong> a URL shortener seemed like a relatively easy and practical first project; it can be handy as part of a larger application for facilitating social sharing, and it doesn’t have a ton of moving parts. <a href=\"https://github.com/dstrunk/shorthorse\">I previously built a simple one</a> with Ruby and Sinatra, but wanted to try one in Rails so the option for extendability was there in the future (advanced analytics, user logins, etc). This is an ongoing project, and my first attempt at completing a non-directed project. In keeping with the Rails Way®, a focus on TDD and DRY concepts are important, especially for a non-directed approach by a semi-beginner. In keeping with the “fail early, fail often” mantra, there have been a couple of false starts, but once I got over the mindset of “It has to be perfect the first time,” work is moving a little faster. <strong>Other miscellany:</strong><a href=\"http://zachholman.com/posts/only-90s-developers/\">This is a fantastic post</a> about how web development was in the 90s. If you ever had gifs on your site that looked like the below, the points Zach talks about will probably resonate with you. <marquee><img src=\"http://res.cloudinary.com/dstrunk/image/upload/v1414083568/Avatars_Gaming_Quake_Animated_cdcmi8.gif\" alt=\"remember the 90s? animated quake gif.\"></marquee> Until next week!</p>","frontmatter":{"title":"Off the beaten path","date":null}}},"pageContext":{"slug":"off-the-beaten-path","type":"blog","jekyllDate":"2014-02-28"}}