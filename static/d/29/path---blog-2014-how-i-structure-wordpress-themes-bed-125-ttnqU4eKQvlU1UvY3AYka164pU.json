{"data":{"markdownRemark":{"html":"<p>I know what you’re thinking … “A WordPress post?! I thought this guy drank the Ruby on Rails Kool-Aid.” Truth is, I never really stopped WordPress development, I was simply looking to expand my horizons a bit. I still use WordPress daily for personal blogs and work-related activites. It’s good at its job, which is either as a blog or an easily extendable CMS-like solution. Anyways … in developing my WordPress themes, I try to keep everything as modular as possible. Here’s my general file structure for anything not WordPress-centric:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">|- assets/\n  |- img/\n  |- inc/\n    |- functions/\n    |- templates/\n    |- vendor/\n  |- js/\n  |- sass/</code></pre></div>\n<p> This is of course a high-level overview, but let me explain a bit: - the <strong>assets</strong> folder holds all theme-related images, includes, JavaScript and Sass files. - the <strong>img</strong> folder holds all images</p>\n<ul>\n<li>the <strong>inc</strong> folder holds all PHP includes</li>\n<li>the <strong>functions</strong> folder holds all theme-centric functions. More on this folder in a bit.</li>\n<li>the <strong>templates</strong> folder holds all theme-centric templates to keep everything DRY</li>\n<li>the <strong>vendor</strong> folder holds all plugin / framework related things that I’ve accumulated over the years to help with development (WPAlchemy, etc)</li>\n<li>the <strong>js</strong> folder holds all JavaScript</li>\n<li>the <strong>sass</strong> folder holds all Sass files, again, to keep everything modular</li>\n</ul>\n<h2>The functions folder</h2>\n<p> Here’s where things get a little more in-depth. First, everyone reading this will know that WordPress requires a <strong>functions.php</strong> file in the top level of a theme directory. Usually, people will add all of their theme configuration options to this file, resulting in a file hundreds of lines long. I’d rather write code than dig through it, so I extracted everything out into its own relevant file placed in the aforementioned <strong>functions</strong> folder. That said, here’s my functions.php: <img src=\"http://res.cloudinary.com/dstrunk/image/upload/v1414083567/Screen-Shot-2014-04-17-at-8_15_13-PM_krqjsg.png\" alt=\"folder setup for WordPress functions.php\"> I won’t be going over the screenshot in depth, but the gist is simple: first, I define any constants I’ll be using a lot in my theme. Next, I have a series of includes that hold relevant code for their name. So, if I create any custom posts? In <strong>custom-post-type.php</strong> it goes. That ensures I always know where my code lies, even if I come back to the project 6 months down the road. I know this was a quick and dirty post, but I hope it helps anyone struggling to maintain a clean directory structure in the face of an ever-evolving theme!</p>","frontmatter":{"title":"How I structure WordPress themes","date":null}}},"pageContext":{"slug":"how-i-structure-wordpress-themes","type":"blog"}}