{"data":{"markdownRemark":{"html":"<p>Today’s ECMAScript 6 feature is similar to the <code class=\"language-text\">let</code> keyword <a href=\"http://wp.me/p3ERzH-3A\" title=\"Daniel Strunk | ECMAScript 6 features: let\">talked about a couple of days ago</a>. Those coming from a formal programming background (C or Java) should be familiar with this one. <code class=\"language-text\">const</code> stands for a constant definition. Similar to the <code class=\"language-text\">let</code> keyword, the <code class=\"language-text\">const</code> keyword is block-scoped. Let’s look at a quick example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">const PHI = 1.618;\nconsole.log( PHI ); // 1.618\n\nPHI = 1;\nconsole.log( PHI ); // 1.618 ... can&#39;t re-assign\n\nconst PHI = 2;\nconsole.log( PHI ); // 1.618 ... can&#39;t re-init\n\nvar PHI = 5\nconsole.log( PHI ); // 1.618 ... can&#39;t re-declare</code></pre></div>","frontmatter":{"title":"ECMAScript 6 features: const","date":null}}},"pageContext":{"slug":"ecmascript-6-features-const","blogpath":"blog/2013/ecmascript-6-features-const","type":"blog","jekyllDate":"2013-07-15"}}