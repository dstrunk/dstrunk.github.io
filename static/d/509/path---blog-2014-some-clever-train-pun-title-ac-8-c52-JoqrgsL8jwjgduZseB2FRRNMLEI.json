{"data":{"markdownRemark":{"html":"<p>It’s now week … I don’t even know any more! Week 6, I think. Maybe week 7 officially—my <a href=\"https://github.com/dstrunk\">GitHub contributions log</a> is showing 51 days now, so there’s that. It’s been a busy week, day-job-work-wise. That’s my excuse for the lack of blog posts (and a somewhat schizophrenic blog post) … but there’s never an excuse for not continuing my Ruby on Rails quest! This week I continued my <a href=\"https://github.com/dstrunk/shorter\">URL shortener project</a>, writing my first unassisted unit and integration tests. The thing I really love about TDD is just how gratifying it is. I’ll admit I cheated a bit—creating a model and doing some light validation beforehand—but writing those first tests and seeing no errors made me almost giddy. Next up on that front is collecting analytics for links clicked; browser information, number of clicks, and so on. Oh! Here’s one reason why I enjoy Ruby so much: it’s so <em>expressive</em>. Check out this code for a random upper / lowercase / number generator that is building URLs for the URL shortener:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">def random_string(var_length)\no = [(&quot;a&quot;..&quot;z&quot;), (&quot;A&quot;..&quot;Z&quot;), (0..9)].map { |i| i.to_a }.flatten\n(0..var_length).map { o[rand(o.length)] }.join\nend</code></pre></div>\n<p>with that extremely simple two-line method, I’m able to add all letters (both upper and lower case) and numbers, combine them into a single array, and select a random string of any length. Pretty cool huh?* I also tinkered a bit more on the <a href=\"https://github.com/dstrunk/typist\">Typist</a> project. It’s pretty close to where I want it to be as a boilerplate, but I’d like to make it a bit more modular so parts can be removed / added a bit easier. Welp, that’s all this week; have a good weekend and until next time!</p>\n<p><small>* Yes I’m aware I could use <a href=\"http://www.ruby-doc.org/stdlib-1.9.3/libdoc/securerandom/rdoc/SecureRandom.html\">SecureRandom</a>; but creating this method was good practice for me :)</small></p>","frontmatter":{"title":"Some clever train-pun title","date":null}}},"pageContext":{"slug":"some-clever-train-pun-title","blogpath":"blog/2014/some-clever-train-pun-title","type":"blog","jekyllDate":"2014-03-07"}}